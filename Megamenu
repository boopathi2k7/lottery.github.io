import React, { useState } from 'react';

const MegaMenu = () => {
  const [activeMenu, setActiveMenu] = useState(null);
  
  // Sample menu data structure
  const menuItems = [
    {
      id: 'products',
      label: 'Products',
      columns: [
        {
          title: 'Electronics',
          items: [
            { name: 'Smartphones', url: '#' },
            { name: 'Laptops', url: '#' },
            { name: 'Tablets', url: '#' },
            { name: 'Cameras', url: '#' },
            { name: 'Audio', url: '#' }
          ]
        },
        {
          title: 'Home Appliances',
          items: [
            { name: 'Refrigerators', url: '#' },
            { name: 'Washing Machines', url: '#' },
            { name: 'Air Conditioners', url: '#' },
            { name: 'Microwaves', url: '#' },
            { name: 'Vacuum Cleaners', url: '#' }
          ]
        },
        {
          title: 'Featured',
          items: [
            { name: 'New Arrivals', url: '#' },
            { name: 'Best Sellers', url: '#' },
            { name: 'Special Offers', url: '#' },
            { name: 'Clearance', url: '#' }
          ]
        }
      ]
    },
    {
      id: 'services',
      label: 'Services',
      columns: [
        {
          title: 'Support',
          items: [
            { name: 'Product Help', url: '#' },
            { name: 'Customer Service', url: '#' },
            { name: 'Warranty Info', url: '#' },
            { name: 'Repairs', url: '#' }
          ]
        },
        {
          title: 'Business',
          items: [
            { name: 'Business Solutions', url: '#' },
            { name: 'Enterprise Accounts', url: '#' },
            { name: 'Education', url: '#' },
            { name: 'Government', url: '#' }
          ]
        }
      ]
    },
    {
      id: 'about',
      label: 'About Us',
      columns: [
        {
          title: 'Company',
          items: [
            { name: 'Our Story', url: '#' },
            { name: 'Leadership', url: '#' },
            { name: 'Careers', url: '#' },
            { name: 'Press Center', url: '#' },
            { name: 'Sustainability', url: '#' }
          ]
        },
        {
          title: 'Contact',
          items: [
            { name: 'Contact Us', url: '#' },
            { name: 'Store Locations', url: '#' },
            { name: 'Find a Dealer', url: '#' }
          ]
        }
      ]
    }
  ];

  // Handle mouse enter on menu item
  const handleMouseEnter = (menuId) => {
    setActiveMenu(menuId);
  };

  // Handle mouse leave on menu
  const handleMouseLeave = () => {
    setActiveMenu(null);
  };

  // Main container styles
  const mainContainerStyle = {
    width: '100%'
  };

  // Navigation styles
  const navStyle = {
    backgroundColor: 'white',
    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'
  };

  const navContainerStyle = {
    maxWidth: '72rem',
    margin: '0 auto',
    padding: '0 1rem'
  };

  const navFlexStyle = {
    display: 'flex',
    justifyContent: 'space-between'
  };

  const logoContainerStyle = {
    display: 'flex',
    alignItems: 'center',
    padding: '1rem 0'
  };

  const logoStyle = {
    fontSize: '1.5rem',
    fontWeight: 'bold',
    color: '#2563eb'
  };

  const primaryNavStyle = {
    display: 'flex',
    alignItems: 'center',
    marginLeft: '2rem'
  };

  const secondaryNavStyle = {
    display: 'flex',
    alignItems: 'center'
  };

  const menuItemStyle = {
    position: 'relative'
  };

  const getMenuButtonStyle = (isActive) => ({
    display: 'flex',
    alignItems: 'center',
    padding: '1rem 0.75rem',
    fontSize: '0.875rem',
    fontWeight: '500',
    color: isActive ? '#2563eb' : '#374151',
    transition: 'color 0.2s',
    borderBottom: isActive ? '2px solid #2563eb' : 'none'
  });

  const chevronStyle = (isActive) => ({
    marginLeft: '0.25rem',
    height: '1rem',
    width: '1rem',
    color: isActive ? '#2563eb' : '#6b7280',
    transform: isActive ? 'rotate(180deg)' : 'rotate(0)',
    transition: 'transform 0.2s'
  });

  const signInStyle = {
    padding: '0.5rem 0.75rem',
    fontSize: '0.875rem',
    fontWeight: '500',
    color: '#374151',
    transition: 'color 0.2s'
  };

  const registerStyle = {
    padding: '0.5rem 1rem',
    backgroundColor: '#2563eb',
    color: 'white',
    fontSize: '0.875rem',
    fontWeight: '500',
    borderRadius: '0.375rem',
    transition: 'background-color 0.2s'
  };

  const mobileButtonStyle = {
    display: 'flex',
    alignItems: 'center'
  };

  const hamburgerIconStyle = {
    height: '1.5rem',
    width: '1.5rem',
    color: '#374151'
  };

  // Mega menu styles
  const getMegaMenuStyle = (isActive) => ({
    position: 'absolute',
    zIndex: 10,
    width: '100%',
    backgroundColor: 'white',
    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    transition: 'all 0.2s ease-in-out',
    opacity: isActive ? 1 : 0,
    visibility: isActive ? 'visible' : 'hidden'
  });

  const megaMenuContainerStyle = {
    maxWidth: '72rem',
    margin: '0 auto',
    padding: '1.5rem 1rem'
  };

  const columnContainerStyle = {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
    gap: '2rem'
  };

  const columnStyle = {
    marginBottom: '1rem'
  };

  const columnTitleStyle = {
    fontSize: '1.125rem',
    fontWeight: '600',
    color: '#1f2937',
    marginBottom: '1rem'
  };

  const columnListStyle = {
    listStyle: 'none',
    padding: 0,
    margin: 0
  };

  const columnItemStyle = {
    marginBottom: '0.5rem'
  };

  const columnLinkStyle = {
    fontSize: '0.875rem',
    color: '#4b5563',
    textDecoration: 'none',
    transition: 'color 0.15s'
  };

  // Responsive styles
  const responsiveHide = {
    display: 'none'
  };

  const mobileMenuStyle = {
    padding: '0.5rem'
  };

  const mobileMenuItemStyle = {
    display: 'block',
    width: '100%',
    textAlign: 'left',
    padding: '0.75rem',
    fontSize: '1rem',
    fontWeight: '500',
    color: '#374151',
    borderRadius: '0.375rem',
    transition: 'background-color 0.2s, color 0.2s'
  };

  // Apply responsive styles based on viewport
  const mediaQuery = window.matchMedia('(min-width: 768px)');
  const isMobile = !mediaQuery.matches;

  return (
    <div style={mainContainerStyle}>
      {/* Main navigation */}
      <nav style={navStyle}>
        <div style={navContainerStyle}>
          <div style={navFlexStyle}>
            <div style={{display: 'flex', alignItems: 'center'}}>
              {/* Logo */}
              <div style={logoContainerStyle}>
                <span style={logoStyle}>LOGO</span>
              </div>
              
              {/* Primary Navigation */}
              <div style={isMobile ? responsiveHide : primaryNavStyle}>
                {menuItems.map((item) => (
                  <div 
                    key={item.id}
                    style={menuItemStyle}
                    onMouseEnter={() => handleMouseEnter(item.id)}
                  >
                    <button style={getMenuButtonStyle(activeMenu === item.id)}>
                      {item.label}
                      <svg 
                        style={chevronStyle(activeMenu === item.id)} 
                        xmlns="http://www.w3.org/2000/svg" 
                        viewBox="0 0 20 20" 
                        fill="currentColor"
                      >
                        <path fillRule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clipRule="evenodd" />
                      </svg>
                    </button>
                  </div>
                ))}
              </div>
            </div>
            
            {/* Secondary Navigation */}
            <div style={isMobile ? responsiveHide : secondaryNavStyle}>
              <a href="#" style={signInStyle}>
                Sign In
              </a>
              <a href="#" style={{...registerStyle, marginLeft: '1rem'}}>
                Register
              </a>
            </div>

            {/* Mobile button */}
            <div style={isMobile ? mobileButtonStyle : responsiveHide}>
              <button style={{background: 'none', border: 'none', cursor: 'pointer', padding: '0.5rem'}}>
                <svg style={hamburgerIconStyle} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* Mega Menu */}
      {menuItems.map((menu) => (
        <div 
          key={menu.id}
          style={getMegaMenuStyle(activeMenu === menu.id)}
          onMouseEnter={() => handleMouseEnter(menu.id)}
          onMouseLeave={handleMouseLeave}
        >
          <div style={megaMenuContainerStyle}>
            <div style={columnContainerStyle}>
              {menu.columns.map((column, idx) => (
                <div key={idx} style={columnStyle}>
                  <h3 style={columnTitleStyle}>{column.title}</h3>
                  <ul style={columnListStyle}>
                    {column.items.map((item, itemIdx) => (
                      <li key={itemIdx} style={columnItemStyle}>
                        <a 
                          href={item.url} 
                          style={columnLinkStyle}
                          onMouseOver={(e) => e.target.style.color = '#2563eb'}
                          onMouseOut={(e) => e.target.style.color = '#4b5563'}
                        >
                          {item.name}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </div>
      ))}

      {/* Mobile Menu (Hidden by default) */}
      <div style={{...mobileMenuStyle, ...responsiveHide}}>
        {menuItems.map((item) => (
          <div key={item.id} style={{marginBottom: '0.5rem'}}>
            <button style={mobileMenuItemStyle}>
              {item.label}
            </button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default MegaMenu;
