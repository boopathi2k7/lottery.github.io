import React, { useState, useEffect } from 'react';
import { ChevronDown, Menu, X } from 'lucide-react';

const MobileAccordionMegaMenu = () => {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [activeAccordions, setActiveAccordions] = useState({});
  const [isMobile, setIsMobile] = useState(false);

  // Check if screen is mobile size
  useEffect(() => {
    const checkIfMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    
    // Initial check
    checkIfMobile();
    
    // Listen for window resize
    window.addEventListener('resize', checkIfMobile);
    
    // Cleanup
    return () => window.removeEventListener('resize', checkIfMobile);
  }, []);

  // Toggle mobile menu
  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  // Toggle specific accordion section
  const toggleAccordion = (sectionId) => {
    setActiveAccordions(prev => ({
      ...prev,
      [sectionId]: !prev[sectionId]
    }));
  };

  // Menu data structure
  const menuSections = [
    {
      id: 'products',
      title: 'Products',
      subSections: [
        {
          id: 'clothing',
          title: 'Clothing',
          items: ['T-Shirts', 'Shirts', 'Pants', 'Jackets', 'Sweaters']
        },
        {
          id: 'accessories',
          title: 'Accessories',
          items: ['Watches', 'Bags', 'Sunglasses', 'Belts', 'Jewelry']
        },
        {
          id: 'shoes',
          title: 'Shoes',
          items: ['Sneakers', 'Boots', 'Sandals', 'Formal', 'Sports']
        }
      ]
    },
    {
      id: 'collections',
      title: 'Collections',
      subSections: [
        {
          id: 'seasonal',
          title: 'Seasonal',
          items: ['Summer', 'Winter', 'Spring', 'Fall']
        },
        {
          id: 'special',
          title: 'Special Editions',
          items: ['Limited Edition', 'Collaborations', 'Designer Series']
        }
      ]
    },
    {
      id: 'about',
      title: 'About',
      subSections: [
        {
          id: 'company',
          title: 'Company',
          items: ['Our Story', 'Team', 'Careers', 'Press']
        },
        {
          id: 'contact',
          title: 'Contact',
          items: ['Customer Service', 'Find a Store', 'Returns', 'Help']
        }
      ]
    }
  ];

  return (
    <div className="relative font-sans">
      {/* Desktop navigation */}
      {!isMobile && (
        <nav className="hidden md:block bg-white shadow">
          <div className="container mx-auto px-4">
            <ul className="flex space-x-6 py-4">
              {menuSections.map((section) => (
                <li key={section.id} className="group relative">
                  <button className="font-medium hover:text-blue-600 transition-colors">
                    {section.title}
                  </button>
                  
                  {/* Mega menu dropdown */}
                  <div className="absolute left-0 top-full mt-2 hidden group-hover:block w-screen max-w-4xl bg-white shadow-lg rounded-md p-6 z-10">
                    <div className="grid grid-cols-3 gap-8">
                      {section.subSections.map((subSection) => (
                        <div key={subSection.id}>
                          <h3 className="text-lg font-semibold mb-3">{subSection.title}</h3>
                          <ul className="space-y-2">
                            {subSection.items.map((item) => (
                              <li key={item}>
                                <a href="#" className="text-gray-600 hover:text-blue-600 transition-colors">
                                  {item}
                                </a>
                              </li>
                            ))}
                          </ul>
                        </div>
                      ))}
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          </div>
        </nav>
      )}

      {/* Mobile navigation */}
      <div className="md:hidden bg-white shadow">
        <div className="flex justify-between items-center px-4 py-3">
          <div className="text-xl font-bold">Brand</div>
          <button 
            onClick={toggleMobileMenu} 
            className="p-2 rounded-md hover:bg-gray-100 transition-colors"
          >
            {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
        </div>
      </div>

      {/* Mobile menu drawer */}
      {isMobileMenuOpen && (
        <div className="fixed inset-0 z-50 bg-white overflow-y-auto">
          <div className="sticky top-0 bg-white border-b border-gray-200 flex justify-between items-center px-4 py-3">
            <div className="text-xl font-bold">Brand</div>
            <button 
              onClick={toggleMobileMenu} 
              className="p-2 rounded-md hover:bg-gray-100 transition-colors"
            >
              <X size={24} />
            </button>
          </div>

          {/* Mobile accordion menu */}
          <div className="p-4">
            {menuSections.map((section) => (
              <div key={section.id} className="border-b border-gray-200">
                <button 
                  onClick={() => toggleAccordion(section.id)}
                  className="w-full py-4 flex justify-between items-center"
                >
                  <span className="text-lg font-medium">{section.title}</span>
                  <ChevronDown 
                    size={20} 
                    className={`transition-transform ${activeAccordions[section.id] ? 'rotate-180' : ''}`} 
                  />
                </button>

                {/* Accordion content */}
                {activeAccordions[section.id] && (
                  <div className="pb-4">
                    {section.subSections.map((subSection) => (
                      <div key={subSection.id} className="mb-4">
                        <h3 className="font-medium text-gray-800 mb-2 pl-4">{subSection.title}</h3>
                        <ul className="space-y-2 pl-8">
                          {subSection.items.map((item) => (
                            <li key={item}>
                              <a href="#" className="text-gray-600">
                                {item}
                              </a>
                            </li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default MobileAccordionMegaMenu;
