import React, { useState } from 'react';
import { Folder, File, ChevronRight, ChevronDown } from 'lucide-react';

// Sample data structure representing a file system with content
const initialFileSystem = {
  name: 'root',
  type: 'folder',
  children: [
    {
      name: 'Documents',
      type: 'folder',
      content: 'This is the Documents folder that contains important files.',
      children: [
        { 
          name: 'resume.pdf', 
          type: 'file',
          content: 'JOHN DOE\n\nEXPERIENCE\nSoftware Engineer at Tech Co (2020-Present)\nJunior Developer at Startup Inc (2018-2020)\n\nEDUCATION\nBS Computer Science, University of Technology (2018)'
        },
        { 
          name: 'cover-letter.docx', 
          type: 'file',
          content: 'Dear Hiring Manager,\n\nI am writing to express my interest in the Software Developer position at your company. With my experience in React and Node.js, I believe I would be a great addition to your team.\n\nSincerely,\nJohn Doe'
        },
        {
          name: 'Projects',
          type: 'folder',
          content: 'A collection of project documentation and notes.',
          children: [
            { 
              name: 'project1.md', 
              type: 'file',
              content: '# Project 1\n\n## Overview\nThis project is a web application that helps users track their daily habits.\n\n## Technologies\n- React\n- Node.js\n- MongoDB'
            },
            { 
              name: 'project2.md', 
              type: 'file',
              content: '# Project 2\n\n## Overview\nAn e-commerce platform with payment processing integration.\n\n## Features\n- User authentication\n- Product catalog\n- Shopping cart\n- Checkout system'
            }
          ]
        }
      ]
    },
    {
      name: 'Images',
      type: 'folder',
      content: 'Collection of personal and professional images.',
      children: [
        { 
          name: 'vacation.jpg', 
          type: 'file',
          content: '[This is an image of a beach vacation in Hawaii. The photo shows a beautiful sunset over the ocean.]'
        },
        { 
          name: 'profile.png', 
          type: 'file',
          content: '[Professional headshot photo for LinkedIn and other professional networks.]'
        }
      ]
    },
    { 
      name: 'todo.txt', 
      type: 'file',
      content: '- Buy groceries\n- Schedule dentist appointment\n- Complete React project\n- Call mom\n- Pay rent'
    },
    { 
      name: 'notes.md', 
      type: 'file',
      content: '# Random Notes\n\n- Meeting with team on Friday at 2pm\n- Ideas for new project: task management app\n- Look into TypeScript tutorials\n- Research cloud hosting options'
    }
  ]
};

// Main component
const FileTreeViewer = () => {
  const [selectedNode, setSelectedNode] = useState(null);
  
  return (
    <div className="flex border border-gray-200 rounded-md max-w-5xl bg-white shadow-sm">
      <div className="w-1/3 p-4 border-r border-gray-200">
        <h2 className="text-lg font-medium mb-3">File Explorer</h2>
        <div className="tree-container overflow-auto">
          <TreeNode 
            node={initialFileSystem} 
            setSelectedNode={setSelectedNode}
          />
        </div>
      </div>
      <div className="w-2/3 p-4">
        <h2 className="text-lg font-medium mb-3">
          {selectedNode ? selectedNode.name : 'Select a file or folder'}
        </h2>
        <div className="bg-gray-50 p-4 rounded-md h-64 overflow-auto whitespace-pre-wrap">
          {selectedNode ? (
            <div className="font-mono text-sm">
              {selectedNode.content || 'No content available'}
            </div>
          ) : (
            <div className="text-gray-400 italic">
              Click on a file or folder to view its contents
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

// TreeNode component for rendering individual nodes
const TreeNode = ({ node, level = 0, setSelectedNode }) => {
  const [isOpen, setIsOpen] = useState(false);
  const isFolder = node.type === 'folder';
  
  const handleClick = (e) => {
    e.stopPropagation();
    setSelectedNode(node);
    
    if (isFolder) {
      setIsOpen(!isOpen);
    }
  };
  
  return (
    <div className="select-none">
      <div 
        className="flex items-center hover:bg-gray-100 py-1 px-2 rounded cursor-pointer"
        onClick={handleClick}
        style={{ paddingLeft: `${level * 16}px` }}
      >
        {isFolder ? (
          <>
            <span className="mr-1 text-gray-500">
              {isOpen ? <ChevronDown size={16} /> : <ChevronRight size={16} />}
            </span>
            <Folder size={18} className="mr-2 text-blue-500" />
          </>
        ) : (
          <File size={18} className="ml-5 mr-2 text-gray-500" />
        )}
        <span className="text-sm">{node.name}</span>
      </div>
      
      {isFolder && isOpen && node.children && (
        <div className="tree-children">
          {node.children.map((childNode, index) => (
            <TreeNode 
              key={`${childNode.name}-${index}`} 
              node={childNode} 
              level={level + 1} 
              setSelectedNode={setSelectedNode}
            />
          ))}
        </div>
      )}
    </div>
  );
};

export default FileTreeViewer;
